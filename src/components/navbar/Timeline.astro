---
import Sidebar from "../sidebar/Sidebar.astro";
import { globalTimeEnd, globalTimeStart } from "./timelineGlobals";

const generateRange = (from: number, to: number) => {
  const out = [];
  for (let i = from; i < to; i++) {
    out.push(i);
  }
  return out;
};

interface Props {
  eventFrom: number;
  eventTo: number;
  importantEvents: number[];
}

const { eventFrom, eventTo, importantEvents } = Astro.props;
---

<div class="w-full bg-brand-blue flex text-white z-50">
  <div class="flex gap-1 pr-16">
    <a href="/" class="px-4 py-2 text-brand-blue bg-white">Domov</a>
    <Sidebar />
  </div>

  <div class="justify-around flex-1 items-end hidden md:flex">
    {
      generateRange(globalTimeStart, globalTimeEnd).map((year) => {
        const component = () => {
          if (importantEvents.includes(year)) {
            return (
              <div class=" flex justify-center items-center flex-col h-full">
                {/* <div class="flex-1 w-1 bg-white" /> */}
                <div class="p-1 text-md">{year}</div>
                <div class="flex-1 w-1 bg-white min-h-2" />
              </div>
            );
          }

          return <div class="h-4 w-[1px] bg-white/30" />;
        };

        // base component
        if (
          (eventFrom < year && year < eventTo) ||
          eventFrom == year ||
          eventTo == year
        ) {
          return (
            <div class="flex-1 bg-white/20 h-full flex flex-col justify-end">
              {component()}
            </div>
          );
        }
        return (
          <div class="flex-1 h-full flex flex-col justify-end">
            {component()}
          </div>
        );
      })
    }
  </div>
</div>
