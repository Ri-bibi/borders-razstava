---
import { getLocale } from "astro-i18n-aut";
import { MapView, type PageLocation } from "../components/map/MapView";
import Layout from "../layouts/Layout.astro";
import { generateTranslationContent, initializei18n } from "../utils/i18n";
import Sidebar from "../components/sidebar/Sidebar.astro";
import type { MapLocation } from "../components/map/Map";
import LanguageSelector from "../components/langSelect/LanguageSelector.astro";

const allPages = await import.meta.glob("/src/pages/*/index.astro");
// Convert the object to an array of entries
const pageEntries = Object.entries(allPages);

// Process each page to extract frontmatter
const pagesWithData: PageLocation[] = await Promise.all(
  pageEntries.map(async ([path, module]) => {
    const m = await module();
    if (
      typeof m === "object" &&
      m !== null &&
      "url" in m &&
      "tKey" in m &&
      "index" in m &&
      "locations" in m
    ) {
      return {
        url: m.url as string,
        tKey: m.tKey as string,
        index: m.index as number,
        locations: m.locations as MapLocation[],
      };
    }
    throw new Error("Unexpected module structure");
  })
);

const locale = getLocale(Astro.url);
const t = await initializei18n(locale);
const resources = await generateTranslationContent();
---

<Layout nofoot>
  <div class="overflow-hidden h-screen w-screen">
    <div class="w-full bg-brand-blue flex gap-4">
      <a href="/" class="px-4 py-2 text-brand-blue bg-white"
        >{t("generic.home")}</a
      >
      <Sidebar />
      <div class="flex-1 flex justify-end items-center">
        <div class="flex text-white gap-4 px-8 items-center">
          <LanguageSelector />
        </div>
      </div>
    </div>
    <MapView
      client:only
      pageLocations={pagesWithData}
      locale={locale}
      resources={resources}
    />
  </div>
</Layout>
