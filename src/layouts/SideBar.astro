---
// src/components/ResponsiveSidebar.astro
interface Props {
  class?: string;
}

const { class: className } = Astro.props;

// Define your links here
const links = [
  { text: "Home", href: "/" },
  { text: "About", href: "/about" },
  { text: "Services", href: "/services" },
  { text: "Contact", href: "/contact" },
];
---

<div class={`sidebar-container ${className || ""}`}>
  <!-- Desktop sidebar (always visible) -->
  <aside class="desktop-sidebar">
    <nav class="sidebar-nav">
      <ul>
        {
          links.map((link) => (
            <li>
              <a href={link.href} class="sidebar-link">
                {link.text}
              </a>
            </li>
          ))
        }
      </ul>
    </nav>
  </aside>

  <!-- Mobile menu button (hidden on desktop) -->
  <button
    class="mobile-menu-button"
    id="mobile-menu-button"
    aria-label="Toggle menu"
  >
    <svg
      xmlns="http://www.w3.org/2000/svg"
      class="h-6 w-6"
      fill="none"
      viewBox="0 0 24 24"
      stroke="currentColor"
    >
      <path
        stroke-linecap="round"
        stroke-linejoin="round"
        stroke-width="2"
        d="M4 6h16M4 12h16M4 18h16"></path>
    </svg>
  </button>

  <!-- Mobile sidebar overlay and content -->
  <div class="sidebar-overlay" id="sidebar-overlay"></div>
  <aside class="mobile-sidebar" id="mobile-sidebar">
    <button class="sidebar-close" id="sidebar-close" aria-label="Close menu">
      <svg
        xmlns="http://www.w3.org/2000/svg"
        class="h-6 w-6"
        fill="none"
        viewBox="0 0 24 24"
        stroke="currentColor"
      >
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          d="M6 18L18 6M6 6l12 12"></path>
      </svg>
    </button>

    <nav class="sidebar-nav">
      <ul>
        {
          links.map((link) => (
            <li>
              <a href={link.href} class="sidebar-link">
                {link.text}
              </a>
            </li>
          ))
        }
      </ul>
    </nav>
  </aside>
</div>

<script is:inline>
  document.addEventListener("DOMContentLoaded", () => {
    const menuButton = document.getElementById("mobile-menu-button");
    const mobileSidebar = document.getElementById("mobile-sidebar");
    const sidebarClose = document.getElementById("sidebar-close");
    const overlay = document.getElementById("sidebar-overlay");

    if (!menuButton || !mobileSidebar || !sidebarClose || !overlay) return;

    const toggleSidebar = () => {
      mobileSidebar.classList.toggle("active");
      overlay.classList.toggle("active");
      document.body.classList.toggle("no-scroll");
    };

    menuButton.addEventListener("click", toggleSidebar);
    sidebarClose.addEventListener("click", toggleSidebar);
    overlay.addEventListener("click", toggleSidebar);

    // Close sidebar when clicking on links
    const links = document.querySelectorAll(".mobile-sidebar .sidebar-link");
    links.forEach((link) => {
      link.addEventListener("click", toggleSidebar);
    });
  });
</script>

<style>
  /* Base styles */
  .sidebar-container {
    display: flex;
  }

  .desktop-sidebar {
    width: 250px;
    background: white;
    box-shadow: 2px 0 10px rgba(0, 0, 0, 0.1);
    padding: 1.5rem;
    height: 100vh;
    position: sticky;
    top: 0;
  }

  .mobile-menu-button {
    display: none;
    background: none;
    border: none;
    cursor: pointer;
    padding: 1rem;
    z-index: 101;
    position: fixed;
    top: 1rem;
    left: 1rem;
  }

  .mobile-sidebar {
    position: fixed;
    top: 0;
    left: -100%;
    width: 80%;
    max-width: 300px;
    height: 100vh;
    background: white;
    box-shadow: 2px 0 10px rgba(0, 0, 0, 0.1);
    transition: left 0.3s ease;
    z-index: 100;
    padding: 1.5rem;
    overflow-y: auto;
  }

  .mobile-sidebar.active {
    left: 0;
  }

  .sidebar-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.5);
    opacity: 0;
    visibility: hidden;
    transition:
      opacity 0.3s ease,
      visibility 0.3s ease;
    z-index: 99;
  }

  .sidebar-overlay.active {
    opacity: 1;
    visibility: visible;
  }

  .sidebar-close {
    position: absolute;
    top: 1rem;
    right: 1rem;
    background: none;
    border: none;
    cursor: pointer;
    padding: 0.5rem;
  }

  .sidebar-nav ul {
    list-style: none;
    padding: 0;
    margin-top: 2rem;
  }

  .sidebar-nav li {
    margin-bottom: 1rem;
  }

  .sidebar-link {
    display: block;
    padding: 0.75rem 0;
    color: #333;
    text-decoration: none;
    font-size: 1.1rem;
    transition: color 0.2s ease;
  }

  .sidebar-link:hover {
    color: #0066cc;
  }

  .no-scroll {
    overflow: hidden;
  }

  /* Responsive behavior */
  @media (max-width: 1024px) {
    .desktop-sidebar {
      display: none;
    }

    .mobile-menu-button {
      display: block;
    }
  }
</style>
